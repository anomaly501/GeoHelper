Documentation
API reference
GeoSeries
geopandas.GeoSeries.shortest_line
geopandas.GeoSeries.shortest_line
#
GeoSeries.
shortest_line
(
other
,
align
=
None
)
[source]
#
Return the shortest two-point line between two geometries.
The resulting line consists of two points, representing the nearest points
between the geometry pair. The line always starts in the first geometry a
and ends in he second geometry b. The endpoints of the line will not
necessarily be existing vertices of the input geometries a and b, but
can also be a point along a line segment.
The operation works on a 1-to-1 row-wise manner:
Parameters
:
other
Geoseries or geometric object
The Geoseries (elementwise) or geometric object to find the
shortest line with.
align
bool | None (default None)
If True, automatically aligns GeoSeries based on their indices.
If False, the order of elements is preserved. None defaults to True.
Returns
:
GeoSeries
Examples
>>>
from
shapely.geometry
import
Polygon
,
LineString
,
Point
>>>
s
=
geopandas
.
GeoSeries
(
...
[
...
Polygon
([(
0
,
0
),
(
2
,
2
),
(
0
,
2
)]),
...
Polygon
([(
0
,
0
),
(
2
,
2
),
(
0
,
2
)]),
...
LineString
([(
0
,
0
),
(
2
,
2
)]),
...
LineString
([(
2
,
0
),
(
0
,
2
)]),
...
Point
(
0
,
1
),
...
],
...
)
>>>
s
0    POLYGON ((0 0, 2 2, 0 2, 0 0))
1    POLYGON ((0 0, 2 2, 0 2, 0 0))
2             LINESTRING (0 0, 2 2)
3             LINESTRING (2 0, 0 2)
4                       POINT (0 1)
dtype: geometry
We can also do intersection of each geometry and a single
shapely geometry:
>>>
p
=
Point
(
3
,
3
)
>>>
s
.
shortest_line
(
p
)
0    LINESTRING (2 2, 3 3)
1    LINESTRING (2 2, 3 3)
2    LINESTRING (2 2, 3 3)
3    LINESTRING (1 1, 3 3)
4    LINESTRING (0 1, 3 3)
dtype: geometry
We can also check two GeoSeries against each other, row by row.
The GeoSeries above have different indices than the one below. We can either
align both GeoSeries based on index values and compare elements with the same
index using
align=True
or ignore index and compare elements based on their
matching order using
align=False
:
>>>
s2
=
geopandas
.
GeoSeries
(
...
[
...
Polygon
([(
0.5
,
0.5
),
(
1.5
,
0.5
),
(
1.5
,
1.5
),
(
0.5
,
1.5
)]),
...
Point
(
3
,
1
),
...
LineString
([(
1
,
0
),
(
2
,
0
)]),
...
Point
(
10
,
15
),
...
Point
(
0
,
1
),
...
],
...
index
=
range
(
1
,
6
),
...
)
>>>
s
.
shortest_line
(
s2
,
align
=
True
)
0                             None
1    LINESTRING (0.5 0.5, 0.5 0.5)
2            LINESTRING (2 2, 3 1)
3            LINESTRING (2 0, 2 0)
4          LINESTRING (0 1, 10 15)
5                             None
dtype: geometry
>>>
>>>
s
.
shortest_line
(
s2
,
align
=
False
)
0    LINESTRING (0.5 0.5, 0.5 0.5)
1            LINESTRING (2 2, 3 1)
2        LINESTRING (0.5 0.5, 1 0)
3          LINESTRING (0 2, 10 15)
4            LINESTRING (0 1, 0 1)
dtype: geometry
previous
geopandas.GeoSeries.segmentize
next
geopandas.GeoSeries.simplify
On this page
GeoSeries.shortest_line()
This Page
Show Source