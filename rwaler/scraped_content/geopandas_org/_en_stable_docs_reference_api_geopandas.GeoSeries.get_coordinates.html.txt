Documentation
API reference
GeoSeries
geopandas.GeoSeries.get_coordinates
geopandas.GeoSeries.get_coordinates
#
GeoSeries.
get_coordinates
(
include_z
=
False
,
ignore_index
=
False
,
index_parts
=
False
,
*
,
include_m
=
False
)
[source]
#
Get coordinates from a
GeoSeries
as a
DataFrame
of
floats.
The shape of the returned
DataFrame
is (N, 2), with N being the
number of coordinate pairs. With the default of
include_z=False
,
three-dimensional data is ignored. When specifying
include_z=True
, the shape
of the returned
DataFrame
is (N, 3).
Parameters
:
include_z
bool, default False
Include Z coordinates
ignore_index
bool, default False
If True, the resulting index will be labelled 0, 1, â€¦, n - 1, ignoring
index_parts
.
index_parts
bool, default False
If True, the resulting index will be a
MultiIndex
(original
index with an additional level indicating the ordering of the coordinate
pairs: a new zero-based index for each geometry in the original GeoSeries).
include_m
bool, default False
Include M coordinates. Requires shapely >= 2.1.
Returns
:
pandas.DataFrame
Examples
>>>
from
shapely.geometry
import
Point
,
LineString
,
Polygon
>>>
s
=
geopandas
.
GeoSeries
(
...
[
...
Point
(
1
,
1
),
...
LineString
([(
1
,
-
1
),
(
1
,
0
)]),
...
Polygon
([(
3
,
-
1
),
(
4
,
0
),
(
3
,
1
)]),
...
]
...
)
>>>
s
0                         POINT (1 1)
1              LINESTRING (1 -1, 1 0)
2    POLYGON ((3 -1, 4 0, 3 1, 3 -1))
dtype: geometry
>>>
s
.
get_coordinates
()
x    y
0  1.0  1.0
1  1.0 -1.0
1  1.0  0.0
2  3.0 -1.0
2  4.0  0.0
2  3.0  1.0
2  3.0 -1.0
>>>
s
.
get_coordinates
(
ignore_index
=
True
)
x    y
0  1.0  1.0
1  1.0 -1.0
2  1.0  0.0
3  3.0 -1.0
4  4.0  0.0
5  3.0  1.0
6  3.0 -1.0
>>>
s
.
get_coordinates
(
index_parts
=
True
)
x    y
0 0  1.0  1.0
1 0  1.0 -1.0
1  1.0  0.0
2 0  3.0 -1.0
1  4.0  0.0
2  3.0  1.0
3  3.0 -1.0
previous
geopandas.GeoSeries.m
next
geopandas.GeoSeries.count_coordinates
On this page
GeoSeries.get_coordinates()
This Page
Show Source