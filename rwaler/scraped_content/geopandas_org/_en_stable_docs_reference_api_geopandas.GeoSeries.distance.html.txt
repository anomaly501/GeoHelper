Documentation
API reference
GeoSeries
geopandas.GeoSeries.distance
geopandas.GeoSeries.distance
#
GeoSeries.
distance
(
other
,
align
=
None
)
[source]
#
Return a
Series
containing the distance to aligned
other
.
The operation works on a 1-to-1 row-wise manner:
Parameters
:
other
Geoseries or geometric object
The Geoseries (elementwise) or geometric object to find the
distance to.
align
bool | None (default None)
If True, automatically aligns GeoSeries based on their indices.
If False, the order of elements is preserved. None defaults to True.
Returns
:
Series (float)
Examples
>>>
from
shapely.geometry
import
Polygon
,
LineString
,
Point
>>>
s
=
geopandas
.
GeoSeries
(
...
[
...
Polygon
([(
0
,
0
),
(
1
,
0
),
(
1
,
1
)]),
...
Polygon
([(
0
,
0
),
(
-
1
,
0
),
(
-
1
,
1
)]),
...
LineString
([(
1
,
1
),
(
0
,
0
)]),
...
Point
(
0
,
0
),
...
],
...
)
>>>
s2
=
geopandas
.
GeoSeries
(
...
[
...
Polygon
([(
0.5
,
0.5
),
(
1.5
,
0.5
),
(
1.5
,
1.5
),
(
0.5
,
1.5
)]),
...
Point
(
3
,
1
),
...
LineString
([(
1
,
0
),
(
2
,
0
)]),
...
Point
(
0
,
1
),
...
],
...
index
=
range
(
1
,
5
),
...
)
>>>
s
0      POLYGON ((0 0, 1 0, 1 1, 0 0))
1    POLYGON ((0 0, -1 0, -1 1, 0 0))
2               LINESTRING (1 1, 0 0)
3                         POINT (0 0)
dtype: geometry
>>>
s2
1    POLYGON ((0.5 0.5, 1.5 0.5, 1.5 1.5, 0.5 1.5, ...
2                                          POINT (3 1)
3                                LINESTRING (1 0, 2 0)
4                                          POINT (0 1)
dtype: geometry
We can check the distance of each geometry of GeoSeries to a single
geometry:
>>>
point
=
Point
(
-
1
,
0
)
>>>
s
.
distance
(
point
)
0    1.0
1    0.0
2    1.0
3    1.0
dtype: float64
We can also check two GeoSeries against each other, row by row.
The GeoSeries above have different indices. We can either align both GeoSeries
based on index values and use elements with the same index using
align=True
or ignore index and use elements based on their matching
order using
align=False
:
>>>
s
.
distance
(
s2
,
align
=
True
)
0         NaN
1    0.707107
2    2.000000
3    1.000000
4         NaN
dtype: float64
>>>
s
.
distance
(
s2
,
align
=
False
)
0    0.000000
1    3.162278
2    0.707107
3    1.000000
dtype: float64
previous
geopandas.GeoSeries.offset_curve
next
geopandas.GeoSeries.hausdorff_distance
On this page
GeoSeries.distance()
This Page
Show Source