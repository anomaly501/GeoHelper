Documentation
API reference
GeoSeries
geopandas.GeoSeries.clip
geopandas.GeoSeries.clip
#
GeoSeries.
clip
(
mask
,
keep_geom_type
=
False
,
sort
=
False
)
[source]
#
Clip points, lines, or polygon geometries to the mask extent.
Both layers must be in the same Coordinate Reference System (CRS).
The GeoSeries will be clipped to the full extent of the
mask
object.
If there are multiple polygons in mask, data from the GeoSeries will be
clipped to the total boundary of all polygons in mask.
Parameters
:
mask
GeoDataFrame, GeoSeries, (Multi)Polygon, list-like
Polygon vector layer used to clip
gdf
.
The maskâ€™s geometry is dissolved into one geometric feature
and intersected with GeoSeries.
If the mask is list-like with four elements
(minx,
miny,
maxx,
maxy)
,
clip
will use a faster rectangle clipping
(
clip_by_rect()
), possibly leading to slightly different
results.
keep_geom_type
boolean, default False
If True, return only geometries of original type in case of intersection
resulting in multiple geometry types or GeometryCollections.
If False, return all resulting geometries (potentially mixed-types).
sort
boolean, default False
If True, the order of rows in the clipped GeoSeries will be preserved
at small performance cost.
If False the order of rows in the clipped GeoSeries will be random.
Returns
:
GeoSeries
Vector data (points, lines, polygons) from
gdf
clipped to
polygon boundary from mask.
See also
clip
top-level function for clip
Examples
Clip points (grocery stores) with polygons (the Near West Side community):
>>>
import
geodatasets
>>>
chicago
=
geopandas
.
read_file
(
...
geodatasets
.
get_path
(
"geoda.chicago_health"
)
...
)
>>>
near_west_side
=
chicago
[
chicago
[
"community"
]
==
"NEAR WEST SIDE"
]
>>>
groceries
=
geopandas
.
read_file
(
...
geodatasets
.
get_path
(
"geoda.groceries"
)
...
)
.
to_crs
(
chicago
.
crs
)
>>>
groceries
.
shape
(148, 8)
>>>
nws_groceries
=
groceries
.
geometry
.
clip
(
near_west_side
)
>>>
nws_groceries
.
shape
(7,)
previous
geopandas.GeoSeries.notna
next
geopandas.GeoSeries.plot
On this page
GeoSeries.clip()
This Page
Show Source