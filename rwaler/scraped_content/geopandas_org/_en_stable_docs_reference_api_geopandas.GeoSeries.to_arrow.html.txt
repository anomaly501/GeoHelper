Documentation
API reference
GeoSeries
geopandas.GeoSeries.to_arrow
geopandas.GeoSeries.to_arrow
#
GeoSeries.
to_arrow
(
geometry_encoding
=
'WKB'
,
interleaved
=
True
,
include_z
=
None
)
[source]
#
Encode a GeoSeries to GeoArrow format.
See
https://geoarrow.org/
for details on the GeoArrow specification.
This functions returns a generic Arrow array object implementing
the
Arrow PyCapsule Protocol
(i.e. having an
__arrow_c_array__
method). This object can then be consumed by your Arrow implementation
of choice that supports this protocol.
Added in version 1.0.
Parameters
:
geometry_encoding
{‘WKB’, ‘geoarrow’ }, default ‘WKB’
The GeoArrow encoding to use for the data conversion.
interleaved
bool, default True
Only relevant for ‘geoarrow’ encoding. If True, the geometries’
coordinates are interleaved in a single fixed size list array.
If False, the coordinates are stored as separate arrays in a
struct type.
include_z
bool, default None
Only relevant for ‘geoarrow’ encoding (for WKB, the dimensionality
of the individial geometries is preserved).
If False, return 2D geometries. If True, include the third dimension
in the output (if a geometry has no third dimension, the z-coordinates
will be NaN). By default, will infer the dimensionality from the
input geometries. Note that this inference can be unreliable with
empty geometries (for a guaranteed result, it is recommended to
specify the keyword).
Returns
:
GeoArrowArray
A generic Arrow array object with geometry data encoded to GeoArrow.
Examples
>>>
from
shapely.geometry
import
Point
>>>
gser
=
geopandas
.
GeoSeries
([
Point
(
1
,
2
),
Point
(
2
,
1
)])
>>>
gser
0    POINT (1 2)
1    POINT (2 1)
dtype: geometry
>>>
arrow_array
=
gser
.
to_arrow
()
>>>
arrow_array
<geopandas.io._geoarrow.GeoArrowArray object at ...>
The returned array object needs to be consumed by a library implementing
the Arrow PyCapsule Protocol. For example, wrapping the data as a
pyarrow.Array (requires pyarrow >= 14.0):
>>>
import
pyarrow
as
pa
>>>
array
=
pa
.
array
(
arrow_array
)
>>>
array
<pyarrow.lib.BinaryArray object at ...>
[
0101000000000000000000F03F0000000000000040,
01010000000000000000000040000000000000F03F
]
previous
geopandas.GeoSeries.from_xy
next
geopandas.GeoSeries.to_file
On this page
GeoSeries.to_arrow()
This Page
Show Source