Documentation
API reference
GeoSeries
geopandas.GeoSeries.within
geopandas.GeoSeries.within
#
GeoSeries.
within
(
other
,
align
=
None
)
[source]
#
Return a
Series
of
dtype('bool')
with value
True
for
each aligned geometry that is within
other
.
An object is said to be within
other
if at least one of its points is located
in the
interior
and no points are located in the
exterior
of the other.
If either object is empty, this operation returns
False
.
This is the inverse of
contains()
in the sense that the
expression
a.within(b)
==
b.contains(a)
always evaluates to
True
.
The operation works on a 1-to-1 row-wise manner:
Parameters
:
other
GeoSeries or geometric object
The GeoSeries (elementwise) or geometric object to test if each
geometry is within.
align
bool | None (default None)
If True, automatically aligns GeoSeries based on their indices.
If False, the order of elements is preserved. None defaults to True.
Returns
:
Series (bool)
See also
GeoSeries.contains
Notes
This method works in a row-wise manner. It does not check if an element
of one GeoSeries is
within
any
element of the other one.
Examples
>>>
from
shapely.geometry
import
Polygon
,
LineString
,
Point
>>>
s
=
geopandas
.
GeoSeries
(
...
[
...
Polygon
([(
0
,
0
),
(
2
,
2
),
(
0
,
2
)]),
...
Polygon
([(
0
,
0
),
(
1
,
2
),
(
0
,
2
)]),
...
LineString
([(
0
,
0
),
(
0
,
2
)]),
...
Point
(
0
,
1
),
...
],
...
)
>>>
s2
=
geopandas
.
GeoSeries
(
...
[
...
Polygon
([(
0
,
0
),
(
1
,
1
),
(
0
,
1
)]),
...
LineString
([(
0
,
0
),
(
0
,
2
)]),
...
LineString
([(
0
,
0
),
(
0
,
1
)]),
...
Point
(
0
,
1
),
...
],
...
index
=
range
(
1
,
5
),
...
)
>>>
s
0    POLYGON ((0 0, 2 2, 0 2, 0 0))
1    POLYGON ((0 0, 1 2, 0 2, 0 0))
2             LINESTRING (0 0, 0 2)
3                       POINT (0 1)
dtype: geometry
>>>
s2
1    POLYGON ((0 0, 1 1, 0 1, 0 0))
2             LINESTRING (0 0, 0 2)
3             LINESTRING (0 0, 0 1)
4                       POINT (0 1)
dtype: geometry
We can check if each geometry of GeoSeries is within a single
geometry:
>>>
polygon
=
Polygon
([(
0
,
0
),
(
2
,
2
),
(
0
,
2
)])
>>>
s
.
within
(
polygon
)
0     True
1     True
2    False
3    False
dtype: bool
We can also check two GeoSeries against each other, row by row.
The GeoSeries above have different indices. We can either align both GeoSeries
based on index values and compare elements with the same index using
align=True
or ignore index and compare elements based on their matching
order using
align=False
:
>>>
s2
.
within
(
s
)
0    False
1    False
2     True
3    False
4    False
dtype: bool
>>>
s2
.
within
(
s
,
align
=
False
)
1     True
2    False
3     True
4     True
dtype: bool
previous
geopandas.GeoSeries.touches
next
geopandas.GeoSeries.covers
On this page
GeoSeries.within()
This Page
Show Source